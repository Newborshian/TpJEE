

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;

import org.junit.jupiter.api.Test;

import Entity.DeptPair;

public class TestCreateDeptPair {
    private EntityManagerFactory emf;
    private EntityManager em;

    @Before
    public void setUp() {
        emf = Persistence.createEntityManagerFactory("test");
        em = emf.createEntityManager();
    }

    @After
    public void tearDown() {
        if (em != null) {
            em.close();
        }
        if (emf != null) {
            emf.close();
        }
    }

    @Test
    public void testClientUpdateBDD() {
        // Méthode de test pour vérifier que les données sont ajoutées à la base de données
        TestCreateDeptPair.updateDatabase();

        // Vérification que les données ont bien été ajoutées
        EntityTransaction txn = em.getTransaction();
        try {
            txn.begin();

            // Vérification de l'ajout de quelques entrées dans la base de données
            DeptPair deptPair = em.find(DeptPair.class, "01");
            assertNotNull(deptPair);
            assertEquals("Ain", deptPair.getDeptName());

            deptPair = em.find(DeptPair.class, "02");
            assertNotNull(deptPair);
            assertEquals("Aisne", deptPair.getDeptName());

            // Vérification de la taille de la base de données après l'ajout initial
            long count = (long) em.createQuery("SELECT COUNT(d) FROM DeptPair d").getSingleResult();
            assertEquals(deptArray.length, count);

            txn.commit();
        } catch (Exception e) {
            if (txn != null && txn.isActive()) {
                txn.rollback();
            }
            e.printStackTrace();
            fail("Test failed with an exception.");
        }
    }
}